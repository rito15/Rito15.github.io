

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://rito15.github.io/</id>
  <title>Rito15</title>
  <subtitle>Game Programmer</subtitle>
  <updated>2023-10-30T03:12:17+09:00</updated>
  <author>
    <name>Rito15</name>
    <uri>https://rito15.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://rito15.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://rito15.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2023 Rito15 </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>유니티 - 업스케일 샘플링(Upscale Sampling)</title>
    <link href="https://rito15.github.io/posts/unity-upscale-sampling/" rel="alternate" type="text/html" title="유니티 - 업스케일 샘플링(Upscale Sampling)" />
    <published>2023-10-30T00:58:00+09:00</published>
  
    <updated>2023-10-30T00:58:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/unity-upscale-sampling/</id>
    <content src="https://rito15.github.io/posts/unity-upscale-sampling/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity" />
    
    <category term="Unity Optimization" />
    
  

  
    <summary>
      





      1. What is it?

모바일과 같은 환경에서는 종종 해상도를 낮춰서 최적화하는 방식을 사용할 때가 있다.

기기에서 최대로 사용 가능한 해상도보다 살짝 낮추면 생각보다 품질은 많이 떨어지지 않으면서, 상당한 성능 상의 여유를 얻을 수 있다.

그리고 라이팅이나 포스트 프로세싱 등 다른 영역에 리소스를 할당하여 전체적인 품질을 향상시킬 수 있다.

하지만 여기에 치명적인 단점이 존재한다.

바로 UI의 해상도를 낮추면 사용자가 해상도가 낮아졌다는 것을 보다 민감하게 받아들일 수 있다는 것이다.

이를 보완하기 위해, UI를 제외한 게임 화면은 해상도를 낮추고 UI의 해상도는 원본을 유지하는 방식을 선택할 수 있는데

이 트릭을 업스케일 샘플링(Upscale Sampling)이라고 한다.



2....
    </summary>
  

  </entry>

  
  <entry>
    <title>★ 알아두면 좋은 유용한 링크, 툴 모음</title>
    <link href="https://rito15.github.io/posts/memo-useful-links-and-tools/" rel="alternate" type="text/html" title="★ 알아두면 좋은 유용한 링크, 툴 모음" />
    <published>2023-05-21T18:34:00+09:00</published>
  
    <updated>2023-05-29T05:08:38+09:00</updated>
  
    <id>https://rito15.github.io/posts/memo-useful-links-and-tools/</id>
    <content src="https://rito15.github.io/posts/memo-useful-links-and-tools/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Memo" />
    
  

  
    <summary>
      





      작성일 기준

  2023. 05. 29




1. Chat AI


ChatGPT

  https://chat.openai.com/chat
  구글링하기 귀찮으면 꼭 쓰세요.
  무료: GPT 3.5 / 유료: GPT 4.0 기반 (월 20달러)
  월 20달러가 비싸긴 한데 GPT 4.0은 비싼 값을 합니다. 그런데 3시간마다 25 메시지 제한이 있으니 결제 시 꼭 고려하세요.


Bing Chat

  https://www.bing.com/new
  GPT 4.0 기반
  검색 데이터 기반으로 동작하고, 데이터를 어디서 찾았는지 링크도 제공합니다.
  체감상 ChatGPT보다 데이터의 질이 많이 떨어집니다.


Bard: Google Chat AI

  https://bard.google.com...
    </summary>
  

  </entry>

  
  <entry>
    <title>관리자 권한으로 CMD 열기(배치파일)</title>
    <link href="https://rito15.github.io/posts/open-cmd-as-admin/" rel="alternate" type="text/html" title="관리자 권한으로 CMD 열기(배치파일)" />
    <published>2023-02-24T22:31:23+09:00</published>
  
    <updated>2023-02-24T22:31:23+09:00</updated>
  
    <id>https://rito15.github.io/posts/open-cmd-as-admin/</id>
    <content src="https://rito15.github.io/posts/open-cmd-as-admin/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="cmd" />
    
  

  
    <summary>
      





      관리자 권한으로 CMD 여는 배치파일 만들기


cmdcmd.bat

@echo off

&amp;gt;nul 2&amp;gt;&amp;amp;1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if '%errorlevel%' NEQ '0' (
    echo.
    goto UACPrompt
) else ( goto gotAdmin )
:UACPrompt
    echo Set UAC = CreateObject^("Shell.Application"^) &amp;gt; "%temp%\getadmin.vbs"
    set params = %*:"=""
    echo UAC.ShellExecute "cmd.exe", "/c %~s0 %params%"...
    </summary>
  

  </entry>

  
  <entry>
    <title>URP 마테리얼이 기본 렌더파이프라인에서 분홍색으로 나타나는 이유</title>
    <link href="https://rito15.github.io/posts/why-urp-material-shows-pink/" rel="alternate" type="text/html" title="URP 마테리얼이 기본 렌더파이프라인에서 분홍색으로 나타나는 이유" />
    <published>2022-05-08T14:54:00+09:00</published>
  
    <updated>2022-05-08T14:54:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/why-urp-material-shows-pink/</id>
    <content src="https://rito15.github.io/posts/why-urp-material-shows-pink/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="Unity Shader" />
    
    <category term="URP Shader Memo" />
    
  

  
    <summary>
      





      기본 쉐이더


빌트인 렌더파이프라인에서 Standard 쉐이더를 사용하듯,

URP에서는 Universal Render Pipeline/Lit 쉐이더를 기본으로 사용한다.

두 쉐이더는 라이팅의 영향을 받으며,

물리 기반 쉐이더(Physically-Based Shader, PBS)를 구현한다는 특징이 있다.



핑크 마테리얼


핑크핑크



URP에서 작업한 위와 같은 씬을 빌트인 렌더파이프라인으로 옮겨오면



이렇게 핑크핑크하게, 전문 용어로 ‘마젠타’ 색상으로 변해버린다.

그 이유는 무엇일까?



URP Lit 쉐이더

경로
{프로젝트 경로}\Library\PackageCache\com.unity.render-pipelines.universal@11.0.0\Shaders\Lit.shad...
    </summary>
  

  </entry>

  
  <entry>
    <title>C# Shorts - 필드의 값 변화 감지하기</title>
    <link href="https://rito15.github.io/posts/cs-detect-changes-of-field-values/" rel="alternate" type="text/html" title="C# Shorts - 필드의 값 변화 감지하기" />
    <published>2022-04-03T15:40:00+09:00</published>
  
    <updated>2022-04-03T15:40:00+09:00</updated>
  
    <id>https://rito15.github.io/posts/cs-detect-changes-of-field-values/</id>
    <content src="https://rito15.github.io/posts/cs-detect-changes-of-field-values/" />
    <author>
      <name>Rito15</name>
    </author>

  
    
    <category term="C#" />
    
    <category term="C# Memo - Shorts" />
    
  

  
    <summary>
      





      소스 코드


private int _score; // 필요하다면 _score = 123; 꼴로 초깃값 직접 설정

public int Score
{
    // Getter에서는 단순히 대상 필드 값만 리턴
    get
    {
        return _score;
    }
    // Setter 블록
    set
    {
        // 저장된 값(_score), 현재 값(value)을 비교하여 변화 감지
        if(_score != value)
        {
            Console.WriteLine($"Value Changed : [{_score}] -&amp;gt; [{value}]");
        }

        // 새로운 값 할당
        _...
    </summary>
  

  </entry>

</feed>


